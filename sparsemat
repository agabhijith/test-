#include<stdio.h>

void readMatrix(int m[10][10], int r, int c){
    int i, j;
    for(i = 0; i < r; i++){
        for(j = 0; j < c; j++)
            scanf("%d", &m[i][j]);
    }
}

void printMatrix(int m[10][10], int r, int c){
    int i,j;
    printf("Matrix: \n");
    for(i = 0; i < r; i++){
        for(j = 0; j < c; j++)
            printf("%d ", m[i][j]);
        printf("\n");
    }
}

int toSparse(int d[10][10], int r, int c, int sparse[10][10]) {
    int count = 0, i, j;
    sparse[0][0] = r;  
    sparse[0][1] = c;  

    count = 0;
    for(i = 0; i < r; i++){
        for(j = 0; j < c; j++){
            if(d[i][j] != 0){
                count++;
                sparse[count][0] = i;
                sparse[count][1] = j;
                sparse[count][2] = d[i][j];
            }
        }
    }
    sparse[0][2] = count;
    return count;
}

void printSparse(int sparse[10][10]){
    int terms = sparse[0][2];
    printf("Sparse matrix format:\n");
    printf("Row Col Val\n");
    for(int i = 0; i <= terms; i++){
        printf("%d   %d   %d   \n", sparse[i][0], sparse[i][1], sparse[i][2]);
    }
}

void addSparse(int m1[10][10], int m2[10][10], int m3[10][10]){
    int r1 = m1[0][2], r2 = m2[0][2];
    int i = 1, j = 1, k = 1;

    m3[0][0] = m1[0][0];
    m3[0][1] = m1[0][1];

    while(i <= r1 && j <= r2){
        if(m1[i][0] == m2[j][0]){
            if(m1[i][1] == m2[j][1]){
                m3[k][0] = m1[i][0];
                m3[k][1] = m1[i][1];
                m3[k][2] = m1[i][2] + m2[j][2];
                i++; j++; k++;
            }
            else if(m1[i][1] < m2[j][1]){
                m3[k][0] = m1[i][0];
                m3[k][1] = m1[i][1];
                m3[k][2] = m1[i][2];
                i++; k++;
            }
            else {
                m3[k][0] = m2[j][0];
                m3[k][1] = m2[j][1];
                m3[k][2] = m2[j][2];
                j++; k++;
            }
        }
        else if(m1[i][0] < m2[j][0]){
            m3[k][0] = m1[i][0];
            m3[k][1] = m1[i][1];
            m3[k][2] = m1[i][2];
            i++; k++;
        }
        else {
            m3[k][0] = m2[j][0];
            m3[k][1] = m2[j][1];
            m3[k][2] = m2[j][2];
            j++; k++;
        }
    }

    while(i <= r1){
        m3[k][0] = m1[i][0];
        m3[k][1] = m1[i][1];
        m3[k][2] = m1[i][2];
        i++; k++;
    }

    while(j <= r2){
        m3[k][0] = m2[j][0];
        m3[k][1] = m2[j][1];
        m3[k][2] = m2[j][2];
        j++; k++;
    }

    m3[0][2] = k - 1;
}

void transposeSparse(int m3[10][10], int m4[10][10]){
    int i, j, k;
    int rows = m3[0][0], cols = m3[0][1], terms = m3[0][2];

    m4[0][0] = cols;
    m4[0][1] = rows;
    m4[0][2] = terms;

    k = 1;
    for(i = 0; i < cols; i++){
        for(j = 1; j <= terms; j++){
            if(m3[j][1] == i){
                m4[k][0] = m3[j][1];
                m4[k][1] = m3[j][0];
                m4[k][2] = m3[j][2];
                k++;
            }
        }
    }
}

int main(){
    int r, c;
    int m1[10][10], m2[10][10];
    int s1[10][10], s2[10][10], m3[10][10], m4[10][10];

    printf("Enter the number of rows and columns: \n");
    scanf("%d %d", &r, &c);

    printf("Enter first matrix:\n");
    readMatrix(m1, r, c);
    printMatrix(m1, r, c);

    printf("Enter second matrix:\n");
    readMatrix(m2, r, c);
    printMatrix(m2, r, c);

    toSparse(m1, r, c, s1);
    printf("\nFirst Sparse Matrix:\n");
    printSparse(s1);

    toSparse(m2, r, c, s2);
    printf("\nSecond Sparse Matrix:\n");
    printSparse(s2);

    addSparse(s1, s2, m3);
    printf("\nAdded Sparse Matrix:\n");
    printSparse(m3);

    transposeSparse(m3, m4);
    printf("\nTransposed Sparse Matrix:\n");
    printSparse(m4);

    return 0;
}
